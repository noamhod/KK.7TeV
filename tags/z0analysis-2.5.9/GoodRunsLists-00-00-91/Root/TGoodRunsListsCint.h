/********************************************************************
* ../Root/TGoodRunsListsCint.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error ../Root/TGoodRunsListsCint.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
extern "C" {
extern void G__cpp_setup_tagtableTGoodRunsListsCint();
extern void G__cpp_setup_inheritanceTGoodRunsListsCint();
extern void G__cpp_setup_typetableTGoodRunsListsCint();
extern void G__cpp_setup_memvarTGoodRunsListsCint();
extern void G__cpp_setup_globalTGoodRunsListsCint();
extern void G__cpp_setup_memfuncTGoodRunsListsCint();
extern void G__cpp_setup_funcTGoodRunsListsCint();
extern void G__set_cpp_environmentTGoodRunsListsCint();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include "../GoodRunsLists/TUniqueGRLString.h"
#include "../GoodRunsLists/RegularFormula.h"
#include "../GoodRunsLists/StrUtil.h"
#include "../GoodRunsLists/TMsgLogger.h"
#include "../GoodRunsLists/TGoodRunsListWriter.h"
#include "../GoodRunsLists/TGoodRunsListReader.h"
#include "../GoodRunsLists/TLumiBlockRange.h"
#include "../GoodRunsLists/TGoodRun.h"
#include "../GoodRunsLists/TGoodRunsList.h"
#include "../GoodRunsLists/TGRLCollection.h"
#include "../GoodRunsLists/DQHelperFunctions.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__TGoodRunsListsCintLN_TClass;
extern G__linked_taginfo G__TGoodRunsListsCintLN_TBuffer;
extern G__linked_taginfo G__TGoodRunsListsCintLN_TMemberInspector;
extern G__linked_taginfo G__TGoodRunsListsCintLN_TObject;
extern G__linked_taginfo G__TGoodRunsListsCintLN_TNamed;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_TString;
extern G__linked_taginfo G__TGoodRunsListsCintLN_Root;
extern G__linked_taginfo G__TGoodRunsListsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_TFormula;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLRegularFormula;
extern G__linked_taginfo G__TGoodRunsListsCintLN_listlETStringcOallocatorlETStringgRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlEstringcOallocatorlEstringgRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_lesslEintgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLTMsgLevel;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLTMsgLogger;
extern G__linked_taginfo G__TGoodRunsListsCintLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLTLumiBlockRange;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiterator;
extern G__linked_taginfo G__TGoodRunsListsCintLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLTGoodRun;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLTGoodRunsList;
extern G__linked_taginfo G__TGoodRunsListsCintLN_allocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_pairlEintcORootcLcLTGoodRungR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgRcLcLiterator;
extern G__linked_taginfo G__TGoodRunsListsCintLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgRcLcLreverse_iterator;
extern G__linked_taginfo G__TGoodRunsListsCintLN_pairlEmaplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgRcLcLiteratorcOboolgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlEintcOallocatorlEintgRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiterator;
extern G__linked_taginfo G__TGoodRunsListsCintLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLBoolOperation;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLTGRLCollection;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiterator;
extern G__linked_taginfo G__TGoodRunsListsCintLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN__xmlTextWriter;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLTGoodRunsListWriter;
extern G__linked_taginfo G__TGoodRunsListsCintLN_vectorlETStringcOallocatorlETStringgRsPgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TGoodRunsListsCintLN_TXMLNode;
extern G__linked_taginfo G__TGoodRunsListsCintLN_RootcLcLTGoodRunsListReader;
extern G__linked_taginfo G__TGoodRunsListsCintLN_DQ;

/* STUB derived class for protected member access */
typedef vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> > G__vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR;
typedef vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::iterator G__vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiterator;
typedef map<int,Root::TGoodRun,less<int>,allocator<pair<const int,Root::TGoodRun> > > G__maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR;
typedef pair<int,Root::TGoodRun> G__pairlEintcORootcLcLTGoodRungR;
typedef map<int,Root::TGoodRun,less<int>,allocator<pair<const int,Root::TGoodRun> > >::iterator G__maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgRcLcLiterator;
typedef vector<Root::TGoodRun,allocator<Root::TGoodRun> > G__vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR;
typedef vector<Root::TGoodRun,allocator<Root::TGoodRun> >::iterator G__vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiterator;
typedef vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> > G__vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR;
typedef vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::iterator G__vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiterator;
